apiVersion: apps/v1
kind: Deployment
metadata:
  name: ticket-booking
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ticket-booking
  template:
    metadata:
      labels:
        app: ticket-booking
    spec:
      containers:
        - name: ticket-booking
          image: 242201290994.dkr.ecr.eu-central-1.amazonaws.com/java-app:LATEST_SHA
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: "250m"   # Reduced CPU request by half
              memory: "512Mi"
            limits:
              cpu: "750m"   # Reduced CPU limit
              memory: "1024Mi"
          envFrom:
            - configMapRef:
                name: ticket-booking-config
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 3
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 25
            periodSeconds: 10
            failureThreshold: 3
            timeoutSeconds: 5
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ticket-booking-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ticket-booking
  minReplicas: 2
  maxReplicas: 6
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
        - type: Pods
          value: 1
          periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 120
      policies:
        - type: Percent
          value: 20
          periodSeconds: 90
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 70
---
apiVersion: v1
kind: Service
metadata:
  name: ticket-booking-service
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: ticket-booking
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ticket-booking-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/auth-url: "http://jwt-validator.default.svc.cluster.local:3000"
    nginx.ingress.kubernetes.io/auth-cache-key: "$http_authorization"
    nginx.ingress.kubernetes.io/auth-cache-duration: "1h"
    nginx.ingress.kubernetes.io/auth-response-headers: "Authorization"
    nginx.ingress.kubernetes.io/limit-rps: "10"
    nginx.ingress.kubernetes.io/limit-burst: "20"
    nginx.ingress.kubernetes.io/limit-connections: "5"
spec:
  ingressClassName: nginx
  rules:
    - host: ticket-booking.obsessionforlearning.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ticket-booking-service
                port:
                  number: 80
