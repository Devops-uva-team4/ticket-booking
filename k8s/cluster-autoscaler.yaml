apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-autoscaler
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cluster-autoscaler
  template:
    metadata:
      labels:
        app: cluster-autoscaler
    spec:
      serviceAccountName: cluster-autoscaler
      nodeSelector:
        kops.k8s.io/instancegroup: nodes-eu-central-1b  # Optional: Remove if you want it to run on any node
      tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"  # Tolerate the control plane taint
      containers:
      - image: registry.k8s.io/autoscaling/cluster-autoscaler:v1.31.0
        name: cluster-autoscaler
        command:
        - ./cluster-autoscaler
        - --v=6
        - --logtostderr
        - --cloud-provider=aws
        - --nodes=2:6:nodes-eu-central-1b.ticket-booking-k8s.obsessionforlearning.com
        - --skip-nodes-with-system-pods=true
        - --expander=most-pods  # Scale using nodes that can hold the most pods
        - --scale-down-utilization-threshold=0.5  # Scale down when below 50% usage
        - --scale-down-unneeded-time=5m  # Reduce scale-down wait time from 10m to 5m
        - --scale-down-delay-after-add=2m  # Allow only 2 min cooldown before next scale-down check
        - --max-node-provision-time=30s  # Reduce time taken to provision a new node
        env:
        - name: AWS_REGION
          value: "eu-central-1"
        - name: CLUSTER_NAME
          value: "ticket-booking-k8s"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: AWS_SECRET_ACCESS_KEY
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
